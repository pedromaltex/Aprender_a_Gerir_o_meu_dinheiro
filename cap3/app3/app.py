import streamlit as st
import pandas as pd
import numpy as np
import plotly.express as px

# --- Informa√ß√£o da aplica√ß√£o ---
APP_INFO = {
    "title": "‚è≥ Tempo √© dinheiro.",
    "description": (
        """
        Quanto mais cedo come√ßares a investir, maior ser√° o efeito do **tempo** no crescimento do teu dinheiro.  

        Nesta aula vais ver:
        - Quanto podes acumular poupando uma quantia mensal
        - Quanto ganhas em juros ao longo dos anos
        - O impacto de come√ßar 5 anos mais cedo
        """
    ),
    "video": "https://www.youtube.com/watch?v=5rbXGjqHCvk&t=261s"
}

# --- Fun√ß√£o de simula√ß√£o com poupan√ßa mensal ---
def simular_poupanca(valor_mensal, anos, rendimento_anual):
    """Simula o crescimento de poupan√ßa mensal com rendimento anual."""
    meses = anos * 12
    taxa_mensal = (1 + rendimento_anual / 100) ** (1/12) - 1
    valores = []
    saldo = 0
    for mes in range(1, meses + 1):
        saldo = saldo * (1 + taxa_mensal) + valor_mensal
        valores.append(saldo)
    df = pd.DataFrame({"M√™s": np.arange(1, meses + 1), "Valor (‚Ç¨)": valores})
    return df

def run():
    st.set_page_config(page_title="Tempo √© dinheiro", page_icon="‚è≥")
    st.title(APP_INFO["title"])
    st.video(APP_INFO["video"])
    st.info(APP_INFO["description"])

    st.subheader("üí∞ Simula√ß√£o de poupan√ßa mensal")

    valor_mensal = st.number_input("Quanto vais poupar por m√™s (‚Ç¨)", min_value=10.0, value=100.0, step=10.0)
    rendimento = st.slider("Rendimento m√©dio anual (%)", min_value=0.0, max_value=15.0, value=6.0, step=0.1)
    anos = st.slider("Horizonte temporal (anos)", min_value=1, max_value=40, value=20)

    # Cen√°rio atual
    df_atual = simular_poupanca(valor_mensal, anos, rendimento)
    final_atual = df_atual["Valor (‚Ç¨)"].iloc[-1]

    # Cen√°rio 5 anos mais cedo
    df_mais_cedo = simular_poupanca(valor_mensal, anos + 5, rendimento)
    final_mais_cedo = df_mais_cedo["Valor (‚Ç¨)"].iloc[-1]

    st.success(
        f"Se poupares **{valor_mensal:,.0f} ‚Ç¨/m√™s** durante **{anos} anos**, com rendimento de **{rendimento:.1f}%/ano**, acumular√°s aproximadamente **{final_atual:,.0f} ‚Ç¨**.\n\n"
        f"Se tivesses come√ßado **5 anos mais cedo**, o valor seria **{final_mais_cedo:,.0f} ‚Ç¨**, demonstrando o poder do tempo e dos juros compostos."
    )

    # --- Calcular juros corretos por ano ---
    df_atual["Juros M√™s (‚Ç¨)"] = df_atual["Valor (‚Ç¨)"].diff() - valor_mensal
    df_atual.loc[0, "Juros M√™s (‚Ç¨)"] = df_atual.loc[0, "Valor (‚Ç¨)"] - valor_mensal

    df_atual["Ano"] = (df_atual["M√™s"] - 1) // 12 + 1
    juros_por_ano = df_atual.groupby("Ano")["Juros M√™s (‚Ç¨)"].sum().reset_index()
    juros_por_ano.rename(columns={"Juros M√™s (‚Ç¨)": "Juros ganhos (‚Ç¨)"}, inplace=True)

    st.subheader("üí∏ Juros ganhos por ano (aproximado)")
    st.dataframe(juros_por_ano, hide_index=True)

    # Mensagem did√°tica
    juros_1 = juros_por_ano.loc[juros_por_ano["Ano"] == 1, "Juros ganhos (‚Ç¨)"].values[0]
    juros_5 = juros_por_ano.loc[juros_por_ano["Ano"] == 5, "Juros ganhos (‚Ç¨)"].values[0] if anos >= 5 else None
    juros_ultimo = juros_por_ano.loc[juros_por_ano["Ano"] == max(juros_por_ano["Ano"]), "Juros ganhos (‚Ç¨)"].values[0]

    msg = f"Aqui consegues perceber o qu√£o importante √© ser consistente:\n\n"
    msg += f"- No primeiro ano, recebes aproximadamente **{juros_1:,.0f} ‚Ç¨** de juros.\n"
    if juros_5 is not None:
        msg += f"- Passados 5 anos, recebes cerca de **{juros_5:,.0f} ‚Ç¨** de juros.\n"
    msg += f"- No √∫ltimo ano, recebes aproximadamente **{juros_ultimo:,.0f} ‚Ç¨**, {juros_ultimo/valor_mensal:,.1f} vezes superior √† tua poupan√ßa mensal."

    st.info(msg)

    # --- Gr√°fico comparativo ---
    df_atual["Cen√°rio"] = f"Come√ßou agora ({anos} anos)"
    df_mais_cedo["Cen√°rio"] = f"Come√ßou 5 anos mais cedo ({anos + 5} anos)"
    df_comb = pd.concat([df_atual, df_mais_cedo], ignore_index=True)

    fig = px.line(
        df_comb, x="M√™s", y="Valor (‚Ç¨)", color="Cen√°rio",
        labels={"Valor (‚Ç¨)": "Valor acumulado (‚Ç¨)", "M√™s": "Meses"},
        title="Compara√ß√£o: Come√ßar agora vs 5 anos mais cedo"
    )
    st.plotly_chart(fig, use_container_width=True)

    st.info(
        "üí¨ **Conclus√£o:** Mesmo pequenas poupan√ßas mensais crescem muito com o tempo e juros compostos. Come√ßar cedo √© sempre uma vantagem."
    )

    st.caption("Projeto *Todos Contam* ‚Äî Aprender a Gerir o Meu Dinheiro ü™ô")

if __name__ == "__main__":
    run()
